type definite_canister_settings = 
 record {
   compute_allocation: nat;
   controllers: vec principal;
   freezing_threshold: nat;
   memory_allocation: nat;
 };
type canister_status = 
 record {
   cycles: nat;
   memory_size: nat;
   module_hash: opt blob;
   settings: definite_canister_settings;
   status: variant {
             running;
             stopped;
             stopping;
           };
 };
service : {
  create_canister: () -> (vec principal);
  get_all_canister_ids: () -> (vec principal) query;
  join_canister: (principal) -> (vec principal);
  unjoin_canister: (principal) -> (vec principal);
  view_canister_statuses: () -> (vec opt canister_status);
  view_canisters_ids_of_caller: () -> (vec principal);
  view_principals_and_canisters: () ->
   (vec record {
          principal;
          vec principal;
        }) query;
  view_principals_of_canister: (principal) -> (vec principal);
}
